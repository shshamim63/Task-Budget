services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: 'on-failure'
    ports:
      - 3000:3000
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - lookup
    env_file:
      - .env

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    networks:
      - lookup
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data

  prisma-studio:
    image: node:latest
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - 5555:5555
    networks:
      - lookup
    depends_on:
      - postgres
    command: ['npx', 'prisma', 'studio']
    env_file:
      - .env
  redis:
    image: redis:latest
    restart: always
    ports:
      - 6379:6379
    networks:
      - lookup
  sonarqube:
    image: sonarqube:latest
    restart: always
    ports:
      - 9000:9000
    environment:
      SONARQUBE_JDBC_URL: jdbc:postgresql://postgres:5432/postgres
      SONARQUBE_JDBC_USERNAME: postgres
      SONARQUBE_JDBC_PASSWORD: example
    networks:
      - lookup
    depends_on:
      - postgres

networks:
  lookup:

volumes:
  postgres:
    driver: local
